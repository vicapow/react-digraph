{"version":3,"sources":["../../src/examples/graph-large.js"],"names":["EMPTY_TYPE","SPECIAL_TYPE","SPECIAL_CHILD_SUBTYPE","EMPTY_EDGE_TYPE","SPECIAL_EDGE_TYPE","generateLargeSample","console","log","sample","nodes","edges","y","x","i","push","id","title","type","GraphLarge","props","state","graph","selected","Graph","App","Component","window","onload","ReactDOM","render","document","getElementById"],"mappings":";;;;AAoBA;;;;AACA;;;;AAEA;;;;;;;;+eAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA,IAAMA,aAAa,OAAnB,C,CAA4B;AAC5B,IAAMC,eAAe,SAArB;AACA,IAAMC,wBAAwB,cAA9B;AACA,IAAMC,kBAAkB,WAAxB;AACA,IAAMC,oBAAoB,aAA1B;;AAEA,SAASC,mBAAT,GAA+B;AAC7BC,UAAQC,GAAR,CAAY,qBAAZ;AACA,MAAMC,SAAS;AACbC,WAAO,EADM;AAEbC,WAAO;AAFM,GAAf;AAIA,MAAIC,IAAI,CAAR;AACA,MAAIC,IAAI,CAAR;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,IAArB,EAA2BA,GAA3B,EAAgC;AAC9B,QAAIA,IAAI,EAAJ,KAAW,CAAf,EAAkB;AAChBF;AACAC,UAAI,CAAJ;AACD,KAHD,MAGO;AACLA;AACD;AACDJ,WAAOC,KAAP,CAAaK,IAAb,CAAkB;AAChBC,UAAIF,CADY;AAEhBG,uBAAeH,CAFC;AAGhBD,SAAG,IAAI,MAAMA,CAHG;AAIhBD,SAAG,IAAI,MAAMA,CAJG;AAKhBM,YAAMhB;AALU,KAAlB;AAOD;AACD,SAAOO,MAAP;AACD;;IAEKU,U;;;AAEJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,aAAOhB,qBADI;AAEXiB,gBAAU;AAFC,KAAb;AAHiB;AAOlB;;;EATsBC,Y;;AAazB;;;IACMC,G;;;;;;;;;;;6BACK;AACP,aAAO,8BAAC,UAAD,OAAP;AACD;;;;EAHeC,gB;;AAKlB,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,SAAOC,MAAP,GAAgB,YAAW;AACzBC,uBAASC,MAAT,CAAgB,8BAAC,GAAD,OAAhB,EAAwBC,SAASC,cAAT,CAAwB,SAAxB,CAAxB;AACD,GAFD;AAGD","file":"graph-large.js","sourcesContent":["// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Graph } from './graph';\n\n// These keys are arbitrary (but must match the config)\n// However, GraphView renders text differently for empty types\n// so this has to be passed in if that behavior is desired.\nconst EMPTY_TYPE = \"empty\"; // Empty node type\nconst SPECIAL_TYPE = \"special\";\nconst SPECIAL_CHILD_SUBTYPE = \"specialChild\";\nconst EMPTY_EDGE_TYPE = \"emptyEdge\";\nconst SPECIAL_EDGE_TYPE = \"specialEdge\";\n\nfunction generateLargeSample() {\n  console.log(\"generateLargeSample\");\n  const sample = {\n    nodes: [],\n    edges: [],\n  };\n  let y = 0;\n  let x = 0;\n  for (let i = 1; i <= 5000; i++) {\n    if (i % 20 === 0) {\n      y++;\n      x = 0;\n    } else {\n      x++;\n    }\n    sample.nodes.push({\n      id: i,\n      title: `Node ${i}`,\n      x: 0 + 200 * x,\n      y: 0 + 200 * y,\n      type: SPECIAL_TYPE,\n    });\n  }\n  return sample;\n}\n\nclass GraphLarge extends Graph {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      graph: generateLargeSample(),\n      selected: {}\n    }\n  }\n\n}\n\n// To bootstrap this example into the Document\nclass App extends Component {\n  render() {\n    return <GraphLarge/>\n  }\n}\nif (typeof window !== 'undefined') {\n  window.onload = function() {\n    ReactDOM.render(<App/>, document.getElementById('content'))\n  }\n}\n"]}